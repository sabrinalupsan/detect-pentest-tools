import psutil
import subprocess
import re
from twilio.rest import Client
import time
import platform
import os
from dotenv import load_dotenv

if platform.system() == "Windows":
    import win32evtlog

load_dotenv()

account_sid = os.getenv('TWILIO_ACCOUNT_SID')
auth_token = os.getenv('TWILIO_AUTH_TOKEN')
twilio_phone_number = os.getenv('TWILIO_PHONE_NUMBER')
my_phone_number = os.getenv('MY_PHONE_NUMBER')
pathToSaveDump = os.getenv('PATH_FOR_PROCDUMP')

client = Client(account_sid, auth_token)

def detectWinpeas():
    print("Running Winpeas check...")
    # Check if the process winpeas.exe is running
    for process in psutil.process_iter():
        if process.name() == "winpeas.exe":
            process_found = True
            break
        else:
            process_found = False

    # Send SMS via Twilio if winpeas.exe is running
    if process_found:
        print("Warning! Winpeas.exe has been detected running")

        client.messages.create(
            body="Warning! Winpeas.exe has been detected running on your machine!",
            from_=twilio_phone_number,
            to=my_phone_number
        )
        return True

    return False

def detectLinpeas():
    print("Running Linpeas check...")
    # Check if the linpeas.sh process is running
    output = subprocess.run(['pgrep', '-f', 'linpeas.sh'], stdout=subprocess.PIPE)
    process_list = output.stdout.decode('utf-8').strip()

    # If linpeas.sh process is running
    if process_list:
        print("Warning! Linpeas.sh has been detected running")
        client.messages \
            .create(
            body="Warning! linpeas.sh has been detected running on your machine!",
            from_=twilio_phone_number,
            to=my_phone_number
        )
        return True

    return False


if platform.system() == "Windows":
    log_type = "Security"
    server = "localhost"
    hand = win32evtlog.OpenEventLog(server, log_type)
    flags = win32evtlog.EVENTLOG_BACKWARDS_READ | win32evtlog.EVENTLOG_SEQUENTIAL_READ
    total = win32evtlog.GetNumberOfEventLogRecords(hand)

foundEvent = False



def registryKeyModificationWindows():
    print("Monitoring registry changes...")
    global foundEvent
    id = 4657
    while True:
        events = win32evtlog.ReadEventLog(hand, flags, 0)
        if events:
            for event in events:
                if event.EventID == id:
                    timestamp = event.TimeGenerated.Format()
                    client.messages.create(
                        body=f"Alert! An event with ID {id} was detected at {timestamp}!",
                        from_=twilio_phone_number,
                        to=my_phone_number
                    )
                    print(f"Alert! An event with ID {id} was detected at {timestamp}!")
                    foundEvent = True
                    return True
    win32evtlog.CloseEventLog(hand)
    return False


def detectMimikatz():
    print("Running Mimikatz check...")
    # Check if mimikatz.exe is running
    for proc in psutil.process_iter(['pid', 'name']):
        if proc.name() == 'mimikatz.exe':
            print("Mimikatz was detected! Running procdump.")
            pid = proc.pid

            # Run the procdump command with the PID
            cmd = f"procdump -ma {pid} {pathToSaveDump}"
            subprocess.run(cmd, shell=True)

            client.messages \
                .create(
                body="Warning! Mimikatz was detected!",
                from_=twilio_phone_number,
                to=my_phone_number
            )

            return True
    return False



# Regular expressions for SQL keywords to search for
sql_keywords = ['UNION', 'ORDER', 'ALTER', 'DROP', 'SELECT', 'INSERT', 'UPDATE', 'DELETE']
# Apache log file location
log_file = '/var/log/apache2/access.log'


def detectSQLMap():
    print("Detecting SQLMap...")
    while True:
        # Open the Apache access log file
        with open(log_file, 'r') as f:
            # Read the log file line by line
            for line in f:
                # Check if any SQL keywords are found in the log line
                if any(re.search(r'{}'.format(keyword), line, re.IGNORECASE) for keyword in sql_keywords):
                    print('An SQL Injection attempt has been found! Here is the request:\n\n', line)
                    # Send an SMS message using Twilio
                    client.messages.create(
                        body='SQL keyword detected in Apache access log!'.format(line.strip()),
                        from_=twilio_phone_number,
                        to=my_phone_number
                    )
                    return True

    return False


def run_function(function):
    if function == "winpeas":
        return detectWinpeas()
    elif function == "linpeas":
        return detectLinpeas()
    elif function == "registry":
        return registryKeyModificationWindows()
    elif function == "mimikatz":
        return detectMimikatz()
    elif function == "sqlmap":
        return detectSQLMap()
    else:
        print("Invalid function entered.")
        return False


if platform.system() == "Windows":
    functions_input = input("Enter the tool, comma-separated (winpeas, registry, or mimikatz): ")
else:
    functions_input = input("Enter the tool, comma-separated (linpeas, sqlmap): ")

functions_input = functions_input.split(",")
funtions_input = list(map(lambda fn: fn.strip().lower(), functions_input))

while True:
    for function in functions_input:
        result = run_function(function)
        if result:
            functions_input.remove(function)
    if len(functions_input) == 0:
        break
    for i in range(5):
        time.sleep(1)
